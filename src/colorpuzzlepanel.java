/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import java.util.Random;
/**
 *
 * @author Dragneel
 */
public class colorpuzzlepanel extends javax.swing.JPanel implements ActionListener{

    /**
     * Creates new form colorpuzzlepanel
     */
    colorbutton input[][]=new colorbutton[8][4];
    JButton output[][]=new JButton[8][4];
    Border buttonborder = new LineBorder(Color.black, 1);
    JButton color[]=new JButton[7];
    int nocol=-1,red=0,blue=1,green=2,yellow=3,pink=4,purple=5,white=6,black=7,currentcol=0,currentrow=0,currentcount=0;
    int answer[]=new int[4];
    int mark[]=new int[4];
    Random randomgenerator=new Random();
    public static boolean win=false;
    public colorpuzzlepanel() {
        initComponents();
        for(int i=0;i<8;i++)
        {
            for(int j=0;j<4;j++)
            {
                input[i][j]=new colorbutton(i,j);
                output[i][j]=new JButton("");
                input[i][j].setBackground(Color.WHITE);
                output[i][j].setBackground(Color.lightGray);
                //output[i][j].setEnabled(false);
                input[i][j].setBorder(buttonborder);
                output[i][j].setBorder(buttonborder);
                input[i][j].addActionListener(this);
                inputpanel.add(input[i][j]);
                outputpanel.add(output[i][j]);
            }
        }
        for(int i=0;i<7;i++)
        {
            color[i]=new JButton("");
            if(i==red) color[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/redcolor.jpg")));
            else if(i==blue) color[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/bluecolor.jpg")));
            else if(i==green) color[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/greencolor.jpg")));
            else if(i==yellow) color[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/yellowcolor.jpg")));
            else if(i==pink) color[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/pinkcolor.jpg")));
            else if(i==purple) color[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/purplecolor.jpg")));
            else if(i==6) color[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedred.jpg")));
            color[i].setBackground(Color.BLACK);
            color[i].setBorder(buttonborder);
            color[i].addActionListener(this);
            colorpanel.add(color[i]);
        }
        for(int i=0;i<4;i++) answer[i]=-1;
        for(int i=0;i<4;i++)
        {
            int flag=1,random=0;
            while(flag!=0)
            {
                flag=0;
                random=randomgenerator.nextInt(6);
                for(int j=0;j<4;j++)
                {
                    if(random==answer[j])
                    {
                        flag=1; break;
                    }
                }
            }
            answer[i]=random;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void wincheck()
    {
        int blackcount=0;
        for(int i=0;i<4;i++) mark[i]=0;
        for(int i=0;i<4;i++)
        {
            int col=input[currentrow][i].getcolor();
            if(col==answer[i]) mark[i]=black;
            else
            {
                for(int j=0;j<4;j++)
                {
                    if(col==answer[j]) 
                    {
                        mark[i]=white; break;
                    }
                }
            }
        }
        for(int i=0;i<3;i++)
        {
            int max=mark[i],pos=i;
            for(int j=i+1;j<4;j++)
            {
                if(mark[j]>max)
                {
                    max=mark[j];
                    pos=j;
                }
            }
            int temp=mark[i];
            mark[i]=max;
            mark[pos]=temp;
        }
        for(int i=0;i<4;i++)
        {
            if(mark[i]==black){
                blackcount++;
                output[currentrow][i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blackgray.jpg")));
            }
            else if(mark[i]==white) output[currentrow][i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitegray.jpg")));
        } 
        if(blackcount==4)
        {
            win=true;
            currentrow=9;
            JOptionPane.showMessageDialog(null,"CONGRATULATIONS!!! You have solved the puzzle\nClick NEXT button to proceed to the last level");
            startpanel.completetimelabel[startpanel.completetimeindex+1].setText(String.valueOf(startpanel.hour)+":"+String.format("%02d",startpanel.minute)+":"+String.format("%02d",startpanel.seconds));
            startpanel.bar[startpanel.currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
        }
        else if(currentrow==7)
        {
            JOptionPane.showMessageDialog(null,"YOU LOST!!! Click NEW button to play again.");
        }
    }
    public void colortile(int row,int col)
    {
        if(row==currentrow)
        {
            if(input[row][col].getcolor()==nocol)
            {
                input[row][col].setcolor(currentcol);
                if(currentcol==red) input[row][col].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedred.jpg")));
                else if(currentcol==blue) input[row][col].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedblue.jpg")));
                else if(currentcol==green) input[row][col].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedgreen.jpg")));
                else if(currentcol==yellow) input[row][col].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedyellow.jpg")));
                else if(currentcol==pink) input[row][col].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedpink.jpg")));
                else if(currentcol==purple) input[row][col].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedpurple.jpg")));
                
                currentcount++;
            }
            else
            {
                input[row][col].setcolor(-1);
                input[row][col].setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitecolor.jpg")));
                currentcount--;
            }
        }
        if(currentcount==4)
        {
            wincheck();
            currentrow++;
            currentcount=0;
        }
    }
    public void actionPerformed(ActionEvent evt)
    {
        if(color[0]==evt.getSource()) 
        {
            color[6].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedred.jpg")));
            currentcol=red;
        }
        else if(color[1]==evt.getSource()) 
        {
            currentcol=blue;
            color[6].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedblue.jpg")));
        }
        else if(color[2]==evt.getSource()) 
        {
            currentcol=green;
            color[6].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedgreen.jpg")));
        }
        else if(color[3]==evt.getSource()) 
        {
            currentcol=yellow;
            color[6].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedyellow.jpg")));
        }
        else if(color[4]==evt.getSource()) 
        {
            currentcol=pink;
            color[6].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedpink.jpg")));
        }
        else if(color[5]==evt.getSource()) 
        {
            currentcol=purple;
            color[6].setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectedpurple.jpg")));
        }
        else
        {
            colorbutton but=(colorbutton)evt.getSource();
            colortile(but.getrow(),but.getcol());
        }
        
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newbutton = new javax.swing.JButton();
        namelabel = new javax.swing.JLabel();
        gamepanel = new javax.swing.JPanel();
        inputpanel = new javax.swing.JPanel();
        outputpanel = new javax.swing.JPanel();
        colorpanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        imagelabel = new javax.swing.JLabel();

        setLayout(null);

        newbutton.setBackground(new java.awt.Color(255, 255, 255));
        newbutton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newbutton.setForeground(new java.awt.Color(102, 0, 0));
        newbutton.setText("New");
        newbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newbuttonActionPerformed(evt);
            }
        });
        add(newbutton);
        newbutton.setBounds(20, 190, 140, 31);

        namelabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        namelabel.setForeground(new java.awt.Color(204, 0, 204));
        namelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        namelabel.setText("COLOR PUZZLE");
        add(namelabel);
        namelabel.setBounds(170, 0, 620, 50);

        gamepanel.setLayout(null);

        inputpanel.setBackground(new java.awt.Color(255, 255, 255));
        inputpanel.setLayout(new java.awt.GridLayout(8, 4));
        gamepanel.add(inputpanel);
        inputpanel.setBounds(0, 60, 320, 460);

        outputpanel.setBackground(new java.awt.Color(255, 255, 255));
        outputpanel.setLayout(new java.awt.GridLayout(8, 4));
        gamepanel.add(outputpanel);
        outputpanel.setBounds(320, 60, 300, 460);

        colorpanel.setBackground(new java.awt.Color(0, 0, 0));
        colorpanel.setLayout(new java.awt.GridLayout(1, 7));
        gamepanel.add(colorpanel);
        colorpanel.setBounds(0, 0, 620, 60);

        add(gamepanel);
        gamepanel.setBounds(170, 60, 620, 520);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 0));
        jButton1.setText("Instructions");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(20, 300, 140, 30);

        imagelabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/colorback.jpg"))); // NOI18N
        add(imagelabel);
        imagelabel.setBounds(0, 0, 820, 620);
    }// </editor-fold>//GEN-END:initComponents

    private void newbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newbuttonActionPerformed
        currentcol=0;currentrow=0;currentcount=0;
        for(int i=0;i<8;i++)
        {
            for(int j=0;j<4;j++)
            {
                input[i][j].setcolor(nocol);
                input[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitecolor.jpg")));
                output[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/gray.jpg")));
            }
        }
        for(int i=0;i<4;i++) answer[i]=-1;
        for(int i=0;i<4;i++)
        {
            int flag=1,random=0;
            while(flag!=0)
            {
                flag=0;
                random=randomgenerator.nextInt(6);
                for(int j=0;j<4;j++)
                {
                    if(random==answer[j])
                    {
                        flag=1; break;
                    }
                }
            }
            answer[i]=random;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_newbuttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(null,"* A pattern of 4 distinct colors is taken randomly. Lets call this pattern ANSWER.\n"
                                            +"* The black colored panel is COLORPANEL.\n"
                                            +"* The white colored panel is INPUTPANEL.\n"
                                            +"* The gray colored panel is OUTPUTPANEL.\n"
                                            +"* You have to select a color from COLORPANEL and place it into the INPUTPANEL\n"
                                            +"* To place/remove a color, left-click on the INPUTPANEL.\n"
                                            +"* After inserting four colors into INPUTPANEL, your color combination is compared with ANSWER.\n"
                                            +"* A combination of black and white color will be shown in the OUTPUTPANEL.\n"
                                            +"* Black color denotes that any one of colors in INPUTPANEL has correct color as well as position(as in ANSWER).\n"
                                            +"* White color denotes that any one of colors in INTPUTPANEL has correct color but wrong position(as in ANSWER).\n"
                                            +"* You have to generate 4 BLACK COLORS to WIN.\n"
                                            +"* You have 8 chances for one ANSWER pattern.After 8 wrong chances you have to restart the puzzle.\n"
                                            +"* Click on NEW button to play the puzzle again(this will change the ANSWER pattern).\n"
                                            
        );
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel colorpanel;
    private javax.swing.JPanel gamepanel;
    private javax.swing.JLabel imagelabel;
    private javax.swing.JPanel inputpanel;
    private javax.swing.JButton jButton1;
    public static javax.swing.JLabel namelabel;
    private javax.swing.JButton newbutton;
    private javax.swing.JPanel outputpanel;
    // End of variables declaration//GEN-END:variables
}
