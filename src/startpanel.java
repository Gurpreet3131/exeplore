/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.*;
import java.awt.event.*;
import java.util.Random;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
/**
 *
 * @author Dragneel/Gurpreet Singh
 */
public class startpanel extends javax.swing.JFrame implements Runnable{
    CardLayout card=new CardLayout();
    JPanel cardpanel=new JPanel();
    public static int completetimeindex=14;
    int orderindex=0,clck=0,added=0;
    String name1,rollno1,name2,rollno2,key;
    namepanelclass namepanelobj=new namepanelclass();
    public static JLabel completetimelabel[]=new JLabel[16];
    Border fieldborder = new LineBorder(Color.black, 1);
    static Thread clock;
    public static int hour=0,minute=0,seconds=0,currentpanel=-2,solved=0;
    int puzzlenum[]={1,2,3,4,5,6};
    int puzzleorder[]=new int[8];
    Random randomGenerator=new Random();
    public static JLabel bar[]=new JLabel[8]; 
    /**
     * Creates new form start
     */
        
    public void run()
    {
        hour=0; minute=0; seconds=0;
        try
        {
            while(true)
            {
    		Thread.sleep(1000);
                seconds++;
		if(seconds==60)
                {
                    seconds=0;
                    minute++;
                    if(minute==60) 
                    {
                        hour++; minute=0;
                    }
                }
                timelabel.setText(String.valueOf(hour)+":"+String.format("%02d",minute)+":"+String.format("%02d",seconds));
                if(hour==2)
                {
                    //card.show(cardpanel,"finishpanel");
                    clock.suspend();
                    break;
                }
            }
        }
        catch(Exception e)
	{
            System.out.println("ERROR OCCURED");
	}
    }
    
    public startpanel() {
        initComponents();     
        cardpanel.setLayout(card);
        timelabel.setText(String.valueOf(hour)+":"+String.format("%02d",minute)+":"+String.format("%02d",seconds));
        for(int i=0;i<16;i++)
        {
            completetimelabel[i]=new JLabel("");
            completetimelabel[i].setForeground(Color.RED);
            completetimelabel[i].setBackground(Color.WHITE);
            completetimelabel[i].setFont(new Font("Arial", Font.PLAIN, 20));
            completetimelabel[i].setHorizontalAlignment(JTextField.CENTER);
            //completetimelabel[i].setBackground(Color.black);
            if(i%2==0) completetimelabel[i].setForeground(Color.BLUE);
            else completetimelabel[i].setForeground(Color.RED);
            completetimelabel[i].setBorder(fieldborder);
            completetimepanel.add(completetimelabel[i]);
        }
        for(int i=7;i>=0;i--)
        {
            bar[i]=new JLabel("");
            bar[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/whitetile.jpg")));
            barprogresspanel.add(bar[i]);
        }
        //setting up the clock 
        getContentPane().add(cardpanel);
        cardpanel.add(new namepanelclass(),"namepanel");
        cardpanel.add(new instructionpanel(),"instructionpanel");
        cardpanel.add(new memorypuzzlepanel(),"memorypuzzlepanel"); 
        puzzleorder[orderindex++]=0;
        while(added!=5)
        {
            int random=randomGenerator.nextInt(5);
            if(puzzlenum[random]!=0)
            {
                added++;
                puzzlenum[random]=0;
                if(random==0) cardpanel.add(new puzzle4x4panel(),"puzzle4x4panel");
                else if(random==1) cardpanel.add(new tiktacktoepanel(),"tiktacktoepanel");
                else if(random==2) cardpanel.add(new minesweeper(),"minesweeper");
                else if(random==3) cardpanel.add(new eightqueenpanel(),"eightqueenpanel");
                else if(random==4) cardpanel.add(new sudokupanel(),"sudokupanel");
                puzzleorder[orderindex++]=random+1;
            }
        }
        cardpanel.add(new colorpuzzlepanel(),"colorpuzzlepanel");
        cardpanel.add(new lightsoutpanel(),"lightsoutpanel"); 
        cardpanel.add(new finishpanel(),"finishpanel");
        puzzleorder[orderindex++]=6; 
        puzzleorder[orderindex++]=7; 
	
        cardpanel.setBounds(0, 40, 820, 620);
        add(cardpanel);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void setlabel()
    {
        if(puzzleorder[currentpanel]==1) completetimelabel[completetimeindex].setText(puzzle4x4panel.puzzle4x4namelabel.getText());
        else if(puzzleorder[currentpanel]==2) completetimelabel[completetimeindex].setText(tiktacktoepanel.namelabel.getText());
        else if(puzzleorder[currentpanel]==3) completetimelabel[completetimeindex].setText(minesweeper.namelabel.getText());
        else if(puzzleorder[currentpanel]==4) completetimelabel[completetimeindex].setText(eightqueenpanel.eightqueenlabel.getText());
        else if(puzzleorder[currentpanel]==5) completetimelabel[completetimeindex].setText(sudokupanel.sudokunamelabel.getText());
    }
    public boolean getwin()
    {
        if(puzzleorder[currentpanel]==1) return puzzle4x4panel.win;
        else if(puzzleorder[currentpanel]==2) return tiktacktoepanel.winner;
        else if(puzzleorder[currentpanel]==3) return minesweeper.win;
        else if(puzzleorder[currentpanel]==4) return eightqueenpanel.win;
        else if(puzzleorder[currentpanel]==5) return sudokupanel.win;
        else return false;
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nextpanel = new javax.swing.JPanel();
        nextbutton = new javax.swing.JButton();
        keytextfield = new javax.swing.JTextField();
        finishbutton = new javax.swing.JButton();
        timepanel = new javax.swing.JPanel();
        displayrollno2label = new javax.swing.JLabel();
        displayname1label = new javax.swing.JLabel();
        displayrollno1label = new javax.swing.JLabel();
        displayname2label = new javax.swing.JLabel();
        timelabel = new javax.swing.JLabel();
        timenamelabel = new javax.swing.JLabel();
        levelpanel = new javax.swing.JPanel();
        levelnumberpanel = new javax.swing.JPanel();
        level8button = new javax.swing.JButton();
        level7button = new javax.swing.JButton();
        level6button = new javax.swing.JButton();
        level5button = new javax.swing.JButton();
        level4button = new javax.swing.JButton();
        level3button = new javax.swing.JButton();
        level2button = new javax.swing.JButton();
        level1button = new javax.swing.JButton();
        barprogresspanel = new javax.swing.JPanel();
        completetimepanel = new javax.swing.JPanel();
        colorpuzzlepanel1 = new colorpuzzlepanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 0, 0));
        setMaximumSize(new java.awt.Dimension(1250, 750));
        setMinimumSize(new java.awt.Dimension(1250, 750));
        setResizable(false);
        getContentPane().setLayout(null);

        nextpanel.setBackground(new java.awt.Color(102, 0, 0));
        nextpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        nextpanel.setLayout(null);

        nextbutton.setBackground(new java.awt.Color(255, 255, 255));
        nextbutton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nextbutton.setText("NEXT");
        nextbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextbuttonActionPerformed(evt);
            }
        });
        nextpanel.add(nextbutton);
        nextbutton.setBounds(590, 10, 90, 30);

        keytextfield.setBackground(new java.awt.Color(102, 0, 0));
        keytextfield.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        keytextfield.setForeground(new java.awt.Color(255, 255, 255));
        keytextfield.setPreferredSize(new java.awt.Dimension(5, 28));
        nextpanel.add(keytextfield);
        keytextfield.setBounds(10, 10, 190, 30);

        finishbutton.setBackground(new java.awt.Color(255, 255, 255));
        finishbutton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        finishbutton.setText("FINISH");
        finishbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishbuttonActionPerformed(evt);
            }
        });
        nextpanel.add(finishbutton);
        finishbutton.setBounds(1120, 10, 110, 30);

        getContentPane().add(nextpanel);
        nextpanel.setBounds(0, 660, 1250, 50);

        timepanel.setBackground(new java.awt.Color(102, 0, 0));
        timepanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        timepanel.setPreferredSize(new java.awt.Dimension(1250, 40));
        timepanel.setLayout(null);

        displayrollno2label.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayrollno2label.setForeground(new java.awt.Color(255, 255, 255));
        displayrollno2label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timepanel.add(displayrollno2label);
        displayrollno2label.setBounds(620, 10, 190, 30);

        displayname1label.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayname1label.setForeground(new java.awt.Color(255, 255, 255));
        displayname1label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timepanel.add(displayname1label);
        displayname1label.setBounds(10, 10, 190, 30);

        displayrollno1label.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayrollno1label.setForeground(new java.awt.Color(255, 255, 255));
        displayrollno1label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timepanel.add(displayrollno1label);
        displayrollno1label.setBounds(190, 10, 190, 30);

        displayname2label.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayname2label.setForeground(new java.awt.Color(255, 255, 255));
        displayname2label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timepanel.add(displayname2label);
        displayname2label.setBounds(440, 10, 190, 30);

        timelabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        timelabel.setForeground(new java.awt.Color(255, 255, 255));
        timelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timepanel.add(timelabel);
        timelabel.setBounds(1040, 10, 110, 30);

        timenamelabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        timenamelabel.setForeground(new java.awt.Color(255, 255, 255));
        timenamelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timenamelabel.setText("TIME:");
        timepanel.add(timenamelabel);
        timenamelabel.setBounds(950, 10, 80, 30);

        getContentPane().add(timepanel);
        timepanel.setBounds(0, 0, 1250, 40);

        levelpanel.setBackground(new java.awt.Color(102, 0, 0));
        levelpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        levelpanel.setFocusable(false);
        levelpanel.setLayout(null);

        levelnumberpanel.setLayout(new java.awt.GridLayout(8, 1));

        level8button.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        level8button.setForeground(new java.awt.Color(51, 51, 51));
        level8button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/level8.jpg"))); // NOI18N
        level8button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level8buttonActionPerformed(evt);
            }
        });
        levelnumberpanel.add(level8button);

        level7button.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        level7button.setForeground(new java.awt.Color(51, 51, 51));
        level7button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/level7.jpg"))); // NOI18N
        level7button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level7buttonActionPerformed(evt);
            }
        });
        levelnumberpanel.add(level7button);

        level6button.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        level6button.setForeground(new java.awt.Color(51, 51, 51));
        level6button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/level6.jpg"))); // NOI18N
        level6button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level6buttonActionPerformed(evt);
            }
        });
        levelnumberpanel.add(level6button);

        level5button.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        level5button.setForeground(new java.awt.Color(51, 51, 51));
        level5button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/level5.jpg"))); // NOI18N
        level5button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level5buttonActionPerformed(evt);
            }
        });
        levelnumberpanel.add(level5button);

        level4button.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        level4button.setForeground(new java.awt.Color(51, 51, 51));
        level4button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/level4.jpg"))); // NOI18N
        level4button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level4buttonActionPerformed(evt);
            }
        });
        levelnumberpanel.add(level4button);

        level3button.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        level3button.setForeground(new java.awt.Color(51, 51, 51));
        level3button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/level3.jpg"))); // NOI18N
        level3button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level3buttonActionPerformed(evt);
            }
        });
        levelnumberpanel.add(level3button);

        level2button.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        level2button.setForeground(new java.awt.Color(51, 51, 51));
        level2button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/level2.jpg"))); // NOI18N
        level2button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level2buttonActionPerformed(evt);
            }
        });
        levelnumberpanel.add(level2button);

        level1button.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        level1button.setForeground(new java.awt.Color(51, 51, 51));
        level1button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/level1.jpg"))); // NOI18N
        level1button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level1buttonActionPerformed(evt);
            }
        });
        levelnumberpanel.add(level1button);

        levelpanel.add(levelnumberpanel);
        levelnumberpanel.setBounds(330, 10, 80, 600);

        barprogresspanel.setLayout(new java.awt.GridLayout(8, 1));
        levelpanel.add(barprogresspanel);
        barprogresspanel.setBounds(250, 10, 60, 600);

        completetimepanel.setBackground(new java.awt.Color(255, 255, 255));
        completetimepanel.setLayout(new java.awt.GridLayout(16, 1));
        levelpanel.add(completetimepanel);
        completetimepanel.setBounds(10, 10, 220, 600);

        getContentPane().add(levelpanel);
        levelpanel.setBounds(820, 40, 430, 620);
        getContentPane().add(colorpuzzlepanel1);
        colorpuzzlepanel1.setBounds(20, 240, 0, 0);

        pack();
	setResizable(true);
    }// </editor-fold>//GEN-END:initComponents

    private void nextbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextbuttonActionPerformed
        if(currentpanel==-2)   //remove comment to make it work fine
        {
           {                
                name1=namepanelclass.name1textfield.getText();
                rollno1=namepanelclass.rollno1textfield.getText();
                name2=namepanelclass.name2textfield.getText();
                rollno2=namepanelclass.rollno2textfield.getText();
                displayname1label.setText(name1);
                displayrollno1label.setText(rollno1);
                displayname2label.setText(name2);
                displayrollno2label.setText(rollno2);
                card.next(cardpanel);
                currentpanel++;
                keytextfield.setText("");
            }    
        }
        else if(currentpanel==-1)
        {
            key=keytextfield.getText();
            if(key.compareTo("start")==0) 
            {
                card.next(cardpanel);
                currentpanel++;
                keytextfield.setText("");
                if(clck==0)
                {
                    clck++;
                    clock.start();
                }
                completetimelabel[completetimeindex].setText(memorypuzzlepanel.namelabel.getText());
            }    
             
        }
        else if(currentpanel==0)
        {
            if(memorypuzzlepanel.win==true)
            {
                card.next(cardpanel);
                completetimeindex-=2;
                currentpanel++;
                setlabel();
                solved++;
            }
        }
        else if(currentpanel==1)
        {
            boolean w=getwin();
            if(w==true)
            {
                card.next(cardpanel);
                completetimeindex-=2;
                currentpanel++;
                setlabel();
                solved++;
            }  
        }
        else if(currentpanel==2)
        {
            boolean w=getwin();
            if(w==true)
            {
                card.next(cardpanel);
                completetimeindex-=2;
                currentpanel++;
                setlabel();
                solved++;
            }  
        }
        else if(currentpanel==3)
        {
            boolean w=getwin();
            if(w==true)
            {
                card.next(cardpanel);
                completetimeindex-=2;
                currentpanel++;
                setlabel();
                solved++;
            }  
        }
        else if(currentpanel==4)
        {
            boolean w=getwin();
            if(w==true)
            {
                card.next(cardpanel);
                completetimeindex-=2;
                currentpanel++;
                setlabel();
                solved++;
            }  
        }
        else if(currentpanel==5)
        {
            boolean w=getwin();
            if(w==true)
            {
                card.next(cardpanel);
                completetimeindex-=2;
                currentpanel++;
                completetimelabel[completetimeindex].setText(colorpuzzlepanel.namelabel.getText());
                solved++;
            }  
        }
        else if(currentpanel==6)
        {
            if(colorpuzzlepanel.win==true)
            {
                card.next(cardpanel);
                completetimeindex-=2;
                currentpanel++;
                completetimelabel[completetimeindex].setText(lightsoutpanel.namelabel.getText());
                solved++;
            }  
        }
        else if(currentpanel==7)
        {
            if(lightsoutpanel.win==true)
            {
                card.next(cardpanel);
                completetimeindex-=2;
                currentpanel++;
                solved++;
                finishpanel.scorelabel.setText("PUZZLES SOLVED : "+String.valueOf(solved)+"/8");
                currentpanel=10;
            }  
        }
        // TODO add your handling code here:asd
    }//GEN-LAST:event_nextbuttonActionPerformed

    private void level5buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level5buttonActionPerformed
        if(keytextfield.getText().compareTo("5")==0 && currentpanel==4)
            {
                card.next(cardpanel);
                completetimelabel[completetimeindex+1].setText("KEY USED"); 
                completetimeindex-=2;
                keytextfield.setText("");
                bar[currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
                currentpanel++;
                setlabel();
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_level5buttonActionPerformed

    private void level3buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level3buttonActionPerformed
        if(keytextfield.getText().compareTo("3")==0 && currentpanel==2)
            {
                card.next(cardpanel);
                completetimelabel[completetimeindex+1].setText("KEY USED"); 
                completetimeindex-=2;
                keytextfield.setText("");
                bar[currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
                currentpanel++;
                setlabel();
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_level3buttonActionPerformed

    private void level1buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level1buttonActionPerformed
            if(keytextfield.getText().compareTo("1")==0 && currentpanel==0)
            {
                card.next(cardpanel);
                completetimelabel[completetimeindex+1].setText("KEY USED"); 
                completetimeindex-=2;
                keytextfield.setText("");
                bar[currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
                currentpanel++;
                setlabel();
            }   // TODO add your handling code here:
    }//GEN-LAST:event_level1buttonActionPerformed

    private void level2buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level2buttonActionPerformed
        if(keytextfield.getText().compareTo("2")==0 && currentpanel==1)
            {
                card.next(cardpanel);
                completetimelabel[completetimeindex+1].setText("KEY USED"); 
                completetimeindex-=2;
                keytextfield.setText("");
                bar[currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
                currentpanel++;
                setlabel();
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_level2buttonActionPerformed

    private void level4buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level4buttonActionPerformed
        if(keytextfield.getText().compareTo("4")==0 && currentpanel==3)
            {
                card.next(cardpanel);
                completetimelabel[completetimeindex+1].setText("KEY USED"); 
                completetimeindex-=2;
                keytextfield.setText("");
                bar[currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
                currentpanel++;
                setlabel();
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_level4buttonActionPerformed

    private void level6buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level6buttonActionPerformed
            if(keytextfield.getText().compareTo("6")==0 && currentpanel==5)
            {
                card.next(cardpanel);
                completetimelabel[completetimeindex+1].setText("KEY USED"); 
                completetimeindex-=2;
                keytextfield.setText("");
                bar[currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
                currentpanel++;
                completetimelabel[completetimeindex].setText(colorpuzzlepanel.namelabel.getText());
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_level6buttonActionPerformed

    private void level7buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level7buttonActionPerformed
        if(keytextfield.getText().compareTo("7")==0 && currentpanel==6)
            {
                card.next(cardpanel);
                completetimelabel[completetimeindex+1].setText("KEY USED"); 
                completetimeindex-=2;
                keytextfield.setText("");
                bar[currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
                currentpanel++;
                completetimelabel[completetimeindex].setText(lightsoutpanel.namelabel.getText());
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_level7buttonActionPerformed

    private void level8buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level8buttonActionPerformed
        if(keytextfield.getText().compareTo("8")==0 && currentpanel==7)
            {
                card.next(cardpanel);
                completetimelabel[completetimeindex+1].setText("KEY USED"); 
                completetimeindex-=2;
                keytextfield.setText("");
                bar[currentpanel].setIcon(new javax.swing.ImageIcon(getClass().getResource("/blacktile.jpg")));
                currentpanel++;
                finishpanel.scorelabel.setText("PUZZLES SOLVED : "+String.valueOf(solved)+"/8");
                currentpanel=10;
                clock.stop();
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_level8buttonActionPerformed

    private void finishbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishbuttonActionPerformed
        if(currentpanel>=0)
        {
            int a=JOptionPane.showConfirmDialog(finishbutton,"Are you sure you want to FINISH the game?");
            if(a==JOptionPane.YES_OPTION)
            {
                card.show(cardpanel,"finishpanel");
                finishpanel.scorelabel.setText("PUZZLES SOLVED : "+String.valueOf(solved)+"/8");
                if(completetimeindex>=0)
                {
                    completetimelabel[completetimeindex+1].setText("QUIT");
                }
                currentpanel=10;
                clock.stop();
            } 
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_finishbuttonActionPerformed
    public void actionPerformed(ActionEvent evt)
    {
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
*/
        /* Create and display the form */
        startpanel clockobj=new startpanel();
        clock=new Thread(clockobj);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new startpanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barprogresspanel;
    private colorpuzzlepanel colorpuzzlepanel1;
    private javax.swing.JPanel completetimepanel;
    private javax.swing.JLabel displayname1label;
    private javax.swing.JLabel displayname2label;
    private javax.swing.JLabel displayrollno1label;
    private javax.swing.JLabel displayrollno2label;
    private javax.swing.JButton finishbutton;
    private javax.swing.JTextField keytextfield;
    private javax.swing.JButton level1button;
    private javax.swing.JButton level2button;
    private javax.swing.JButton level3button;
    private javax.swing.JButton level4button;
    private javax.swing.JButton level5button;
    private javax.swing.JButton level6button;
    private javax.swing.JButton level7button;
    private javax.swing.JButton level8button;
    private javax.swing.JPanel levelnumberpanel;
    private javax.swing.JPanel levelpanel;
    private javax.swing.JButton nextbutton;
    private javax.swing.JPanel nextpanel;
    public static javax.swing.JLabel timelabel;
    private javax.swing.JLabel timenamelabel;
    private javax.swing.JPanel timepanel;
    // End of variables declaration//GEN-END:variables
}
